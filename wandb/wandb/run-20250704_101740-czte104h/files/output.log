[W&B] run initialised
Initial action probs: ['0.24', '0.15', '0.26', '0.20', '0.16'] Entropy: 0.10
[5/200] Average Reward: -64.70
Action probabilities: ['0.27', '0.16', '0.20', '0.19', '0.19'] Entropy: 0.10
[10/200] Average Reward: -48.40
Action probabilities: ['0.30', '0.15', '0.16', '0.19', '0.20'] Entropy: 0.09
Traceback (most recent call last):
  File "/home/battist/projects/ducks-riding-lamas/main_ppo.py", line 164, in <module>
    reward_log, _, _ = agent.train_ppo(env)
                       ^^^^^^^^^^^^^^^^^^^^
  File "/home/battist/projects/ducks-riding-lamas/agent_ppo/ppo_agent.py", line 44, in train_ppo
    reward_log, total_episodes = self.run_ppo(training=True, env=env, model_path=None)
                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/battist/projects/ducks-riding-lamas/agent_ppo/ppo_agent.py", line 118, in run_ppo
    value_from_critic = self.critic_network(encoded_state) # Get value of current state
                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/battist/miniconda3/envs/lab/lib/python3.11/site-packages/keras/src/utils/traceback_utils.py", line 117, in error_handler
    return fn(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^
  File "/home/battist/miniconda3/envs/lab/lib/python3.11/site-packages/keras/src/layers/layer.py", line 910, in __call__
    outputs = super().__call__(*args, **kwargs)
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/battist/miniconda3/envs/lab/lib/python3.11/site-packages/keras/src/utils/traceback_utils.py", line 117, in error_handler
    return fn(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^
  File "/home/battist/miniconda3/envs/lab/lib/python3.11/site-packages/keras/src/ops/operation.py", line 58, in __call__
    return call_fn(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/battist/miniconda3/envs/lab/lib/python3.11/site-packages/keras/src/utils/traceback_utils.py", line 156, in error_handler
    return fn(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^
  File "/home/battist/miniconda3/envs/lab/lib/python3.11/site-packages/keras/src/models/sequential.py", line 221, in call
    return self._functional.call(inputs, training=training, mask=mask)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/battist/miniconda3/envs/lab/lib/python3.11/site-packages/keras/src/models/functional.py", line 183, in call
    outputs = self._run_through_graph(
              ^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/battist/miniconda3/envs/lab/lib/python3.11/site-packages/keras/src/ops/function.py", line 171, in _run_through_graph
    outputs = op(*args, **kwargs)
              ^^^^^^^^^^^^^^^^^^^
  File "/home/battist/miniconda3/envs/lab/lib/python3.11/site-packages/keras/src/models/functional.py", line 643, in call
    return operation(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/battist/miniconda3/envs/lab/lib/python3.11/site-packages/keras/src/utils/traceback_utils.py", line 117, in error_handler
    return fn(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^
  File "/home/battist/miniconda3/envs/lab/lib/python3.11/site-packages/keras/src/layers/layer.py", line 936, in __call__
    self._set_mask_metadata(
  File "/home/battist/miniconda3/envs/lab/lib/python3.11/site-packages/keras/src/layers/layer.py", line 1546, in _set_mask_metadata
    flat_outputs = tree.flatten(outputs)
                   ^^^^^^^^^^^^^^^^^^^^^
  File "/home/battist/miniconda3/envs/lab/lib/python3.11/site-packages/keras/src/tree/tree_api.py", line 133, in flatten
    return tree_impl.flatten(structure)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "/home/battist/miniconda3/envs/lab/lib/python3.11/site-packages/keras/src/tree/optree_impl.py", line 80, in flatten
    leaves, _ = optree.tree_flatten(
                ^^^^^^^^^^^^^^^^^^^^
  File "/home/battist/miniconda3/envs/lab/lib/python3.11/site-packages/optree/ops.py", line 196, in tree_flatten
    return _C.flatten(tree, is_leaf, none_is_leaf, namespace)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
KeyboardInterrupt
