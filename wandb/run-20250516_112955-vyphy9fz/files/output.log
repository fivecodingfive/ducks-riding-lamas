Model: "sequential"
┌─────────────────────────────────┬────────────────────────┬───────────────┐
│ Layer (type)                    │ Output Shape           │       Param # │
├─────────────────────────────────┼────────────────────────┼───────────────┤
│ dense (Dense)                   │ (None, 64)             │           384 │
├─────────────────────────────────┼────────────────────────┼───────────────┤
│ dense_1 (Dense)                 │ (None, 64)             │         4,160 │
├─────────────────────────────────┼────────────────────────┼───────────────┤
│ dense_2 (Dense)                 │ (None, 5)              │           325 │
└─────────────────────────────────┴────────────────────────┴───────────────┘
 Total params: 4,869 (19.02 KB)
 Trainable params: 4,869 (19.02 KB)
 Non-trainable params: 0 (0.00 B)
Episode 1/5 | Reward: -70.5 | Epsilon: 0.367 | Loss: 0.540
Episode 2/5 | Reward: -34.5 | Epsilon: 0.135 | Loss: 0.930
Traceback (most recent call last):
  File "C:\Users\jonas\PycharmProjects\ducks-riding-lamas\main.py", line 34, in <module>
    rewards = train_dqn(env, config)
              ^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\jonas\PycharmProjects\ducks-riding-lamas\agents\dqn\train.py", line 33, in train_dqn
    total_reward, steps, avg_loss, avg_q = trainer.run_episode()
                                           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\jonas\PycharmProjects\ducks-riding-lamas\agents\dqn\trainer.py", line 39, in run_episode
    loss = self.agent.update_weights(states, actions, rewards, next_states, dones)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\jonas\PycharmProjects\ducks-riding-lamas\agents\dqn\agent.py", line 64, in update_weights
    self.optimizer.apply_gradients(zip(grads, self.model.trainable_variables))
  File "C:\Users\jonas\PycharmProjects\ducks-riding-lamas\venv\Lib\site-packages\keras\src\optimizers\base_optimizer.py", line 383, in apply_gradients
    self.apply(grads, trainable_variables)
  File "C:\Users\jonas\PycharmProjects\ducks-riding-lamas\venv\Lib\site-packages\keras\src\optimizers\base_optimizer.py", line 448, in apply
    self._backend_apply_gradients(grads, trainable_variables)
  File "C:\Users\jonas\PycharmProjects\ducks-riding-lamas\venv\Lib\site-packages\keras\src\optimizers\base_optimizer.py", line 511, in _backend_apply_gradients
    self._backend_update_step(
  File "C:\Users\jonas\PycharmProjects\ducks-riding-lamas\venv\Lib\site-packages\keras\src\backend\tensorflow\optimizer.py", line 120, in _backend_update_step
    tf.__internal__.distribute.interim.maybe_merge_call(
  File "C:\Users\jonas\PycharmProjects\ducks-riding-lamas\venv\Lib\site-packages\tensorflow\python\distribute\merge_call_interim.py", line 51, in maybe_merge_call
    return fn(strategy, *args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\jonas\PycharmProjects\ducks-riding-lamas\venv\Lib\site-packages\keras\src\backend\tensorflow\optimizer.py", line 134, in _distributed_tf_update_step
    distribution.extended.update(
  File "C:\Users\jonas\PycharmProjects\ducks-riding-lamas\venv\Lib\site-packages\tensorflow\python\distribute\distribute_lib.py", line 3005, in update
    return self._update(var, fn, args, kwargs, group)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\jonas\PycharmProjects\ducks-riding-lamas\venv\Lib\site-packages\tensorflow\python\distribute\distribute_lib.py", line 4075, in _update
    return self._update_non_slot(var, fn, (var,) + tuple(args), kwargs, group)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\jonas\PycharmProjects\ducks-riding-lamas\venv\Lib\site-packages\tensorflow\python\distribute\distribute_lib.py", line 4081, in _update_non_slot
    result = fn(*args, **kwargs)
             ^^^^^^^^^^^^^^^^^^^
  File "C:\Users\jonas\PycharmProjects\ducks-riding-lamas\venv\Lib\site-packages\tensorflow\python\autograph\impl\api.py", line 596, in wrapper
    return func(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\jonas\PycharmProjects\ducks-riding-lamas\venv\Lib\site-packages\keras\src\backend\tensorflow\optimizer.py", line 131, in apply_grad_to_update_var
    return self.update_step(grad, var, learning_rate)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\jonas\PycharmProjects\ducks-riding-lamas\venv\Lib\site-packages\keras\src\optimizers\adam.py", line 130, in update_step
    alpha = lr * ops.sqrt(1 - beta_2_power) / (1 - beta_1_power)
                 ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\jonas\PycharmProjects\ducks-riding-lamas\venv\Lib\site-packages\keras\src\ops\numpy.py", line 6334, in sqrt
    return backend.numpy.sqrt(x)
           ^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\jonas\PycharmProjects\ducks-riding-lamas\venv\Lib\site-packages\keras\src\backend\tensorflow\sparse.py", line 387, in sparse_wrapper
    return func(x, *args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\jonas\PycharmProjects\ducks-riding-lamas\venv\Lib\site-packages\keras\src\backend\tensorflow\numpy.py", line 2606, in sqrt
    return tf.math.sqrt(x)
           ^^^^^^^^^^^^^^^
  File "C:\Users\jonas\PycharmProjects\ducks-riding-lamas\venv\Lib\site-packages\tensorflow\python\ops\weak_tensor_ops.py", line 88, in wrapper
    return op(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^
  File "C:\Users\jonas\PycharmProjects\ducks-riding-lamas\venv\Lib\site-packages\tensorflow\python\util\traceback_utils.py", line 150, in error_handler
    return fn(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^
  File "C:\Users\jonas\PycharmProjects\ducks-riding-lamas\venv\Lib\site-packages\tensorflow\python\util\dispatch.py", line 1260, in op_dispatch_handler
    return dispatch_target(*args, **kwargs)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\jonas\PycharmProjects\ducks-riding-lamas\venv\Lib\site-packages\tensorflow\python\ops\math_ops.py", line 5734, in sqrt
    return gen_math_ops.sqrt(x, name)
           ^^^^^^^^^^^^^^^^^^^^^^^^^^
  File "C:\Users\jonas\PycharmProjects\ducks-riding-lamas\venv\Lib\site-packages\tensorflow\python\ops\gen_math_ops.py", line 11930, in sqrt
    _result = pywrap_tfe.TFE_Py_FastPathExecute(
              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
KeyboardInterrupt
